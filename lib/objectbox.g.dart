// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'src/data/models/configuration_entity.dart';
import 'src/data/models/data_entity.dart';
import 'src/data/models/remote_update_entity.dart';
import 'src/data/models/sync_device_entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
    id: const obx_int.IdUid(1, 8095617417935777367),
    name: 'DataEntity',
    lastPropertyId: const obx_int.IdUid(11, 8996818882446366634),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4814854763836305094),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 390838745052845430),
        name: 'data',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 7333676248898096708),
        name: 'tableName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1278620971552686769),
        name: 'entityId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 1640554381242179226),
        name: 'operation',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 1307755361691726201),
        name: 'entity',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 6263159733768399507),
        name: 'isSynced',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 7542387158162119123),
        name: 'updatedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 8049565669460423512),
        name: 'createdAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 3162458236855158872),
        name: 'deletedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 8996818882446366634),
        name: 'uuid',
        type: 9,
        flags: 2080,
        indexId: const obx_int.IdUid(2, 3979365755674980984),
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(2, 2751842997314007542),
    name: 'ConfigurationEntity',
    lastPropertyId: const obx_int.IdUid(19, 351267330874263691),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 3629231878171608271),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3186111696241817611),
        name: 'currentDeviceId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 2506227871816325925),
        name: 'accountKey',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 8582917094621816919),
        name: 'baseUrl',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 5903685566757609362),
        name: 'remoteEndpoint',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 316672047324170772),
        name: 'localEndpoint',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 6841203765712350909),
        name: 'addSyncDeviceEndpoint',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 8711626558886932794),
        name: 'authToken',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 7580051042323978735),
        name: 'userId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 2755131843964416427),
        name: 'extras',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 7246575307722926319),
        name: 'localLastUpdatedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 6274735740772024161),
        name: 'remoteLastUpdatedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 4533767197676979748),
        name: 'updatedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 3852732653519494351),
        name: 'createdAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 7694030657287302890),
        name: 'deletedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(16, 7432950663102478746),
        name: 'isSynced',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(17, 5366519826674512079),
        name: 'connectAccountEndpoint',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(18, 1537024117665119458),
        name: 'userName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(19, 351267330874263691),
        name: 'uuid',
        type: 9,
        flags: 2080,
        indexId: const obx_int.IdUid(1, 3802401927681834326),
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(3, 1757007729880252278),
    name: 'SyncDeviceEntity',
    lastPropertyId: const obx_int.IdUid(8, 6658050835918813677),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 6748703512524815105),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 877634275871827526),
        name: 'deviceId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 687172485623488665),
        name: 'userId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 187509530987758070),
        name: 'updatedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 7711934288890769523),
        name: 'createdAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 2913576576632977169),
        name: 'deletedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 8858034248898752137),
        name: 'isSynced',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 6658050835918813677),
        name: 'uuid',
        type: 9,
        flags: 2080,
        indexId: const obx_int.IdUid(3, 336069653081213381),
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(4, 1243067544576093045),
    name: 'RemoteUpdateEntity',
    lastPropertyId: const obx_int.IdUid(7, 2858323529693737734),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2469104698067902535),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 1863854322225138047),
        name: 'uuid',
        type: 9,
        flags: 2080,
        indexId: const obx_int.IdUid(4, 4909793079609122257),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 4233498888462780353),
        name: 'isSynced',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 8961065214515420561),
        name: 'data',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 9059217487780271706),
        name: 'updatedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 7756937699261535801),
        name: 'createdAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 2858323529693737734),
        name: 'deletedAt',
        type: 10,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore({
  String? directory,
  int? maxDBSizeInKB,
  int? maxDataSizeInKB,
  int? fileMode,
  int? maxReaders,
  bool queriesCaseSensitiveDefault = true,
  String? macosApplicationGroup,
}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(
    getObjectBoxModel(),
    directory: directory ?? (await defaultStoreDirectory()).path,
    maxDBSizeInKB: maxDBSizeInKB,
    maxDataSizeInKB: maxDataSizeInKB,
    fileMode: fileMode,
    maxReaders: maxReaders,
    queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
    macosApplicationGroup: macosApplicationGroup,
  );
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
    entities: _entities,
    lastEntityId: const obx_int.IdUid(4, 1243067544576093045),
    lastIndexId: const obx_int.IdUid(4, 4909793079609122257),
    lastRelationId: const obx_int.IdUid(0, 0),
    lastSequenceId: const obx_int.IdUid(0, 0),
    retiredEntityUids: const [],
    retiredIndexUids: const [],
    retiredPropertyUids: const [],
    retiredRelationUids: const [],
    modelVersion: 5,
    modelVersionParserMinimum: 5,
    version: 1,
  );

  final bindings = <Type, obx_int.EntityDefinition>{
    DataEntity: obx_int.EntityDefinition<DataEntity>(
      model: _entities[0],
      toOneRelations: (DataEntity object) => [],
      toManyRelations: (DataEntity object) => {},
      getId: (DataEntity object) => object.id,
      setId: (DataEntity object, int id) {
        object.id = id;
      },
      objectToFB: (DataEntity object, fb.Builder fbb) {
        final dataOffset = fbb.writeString(object.data);
        final tableNameOffset = fbb.writeString(object.tableName);
        final entityIdOffset =
            object.entityId == null ? null : fbb.writeString(object.entityId!);
        final operationOffset = fbb.writeString(object.operation);
        final entityOffset = fbb.writeString(object.entity);
        final uuidOffset =
            object.uuid == null ? null : fbb.writeString(object.uuid!);
        fbb.startTable(12);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, dataOffset);
        fbb.addOffset(2, tableNameOffset);
        fbb.addOffset(3, entityIdOffset);
        fbb.addOffset(4, operationOffset);
        fbb.addOffset(5, entityOffset);
        fbb.addBool(6, object.isSynced);
        fbb.addInt64(7, object.updatedAt?.millisecondsSinceEpoch);
        fbb.addInt64(8, object.createdAt?.millisecondsSinceEpoch);
        fbb.addInt64(9, object.deletedAt?.millisecondsSinceEpoch);
        fbb.addOffset(10, uuidOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final updatedAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final createdAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final deletedAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          22,
        );
        final idParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final uuidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 24);
        final dataParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final tableNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final entityIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final operationParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 12, '');
        final entityParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 14, '');
        final isSyncedParam = const fb.BoolReader().vTableGet(
          buffer,
          rootOffset,
          16,
          false,
        );
        final updatedAtParam =
            updatedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedAtValue);
        final createdAtParam =
            createdAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdAtValue);
        final deletedAtParam =
            deletedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(deletedAtValue);
        final object = DataEntity(
          id: idParam,
          uuid: uuidParam,
          data: dataParam,
          tableName: tableNameParam,
          entityId: entityIdParam,
          operation: operationParam,
          entity: entityParam,
          isSynced: isSyncedParam,
          updatedAt: updatedAtParam,
          createdAt: createdAtParam,
          deletedAt: deletedAtParam,
        );

        return object;
      },
    ),
    ConfigurationEntity: obx_int.EntityDefinition<ConfigurationEntity>(
      model: _entities[1],
      toOneRelations: (ConfigurationEntity object) => [],
      toManyRelations: (ConfigurationEntity object) => {},
      getId: (ConfigurationEntity object) => object.id,
      setId: (ConfigurationEntity object, int id) {
        object.id = id;
      },
      objectToFB: (ConfigurationEntity object, fb.Builder fbb) {
        final currentDeviceIdOffset =
            object.currentDeviceId == null
                ? null
                : fbb.writeString(object.currentDeviceId!);
        final accountKeyOffset =
            object.accountKey == null
                ? null
                : fbb.writeString(object.accountKey!);
        final baseUrlOffset =
            object.baseUrl == null ? null : fbb.writeString(object.baseUrl!);
        final remoteEndpointOffset =
            object.remoteEndpoint == null
                ? null
                : fbb.writeString(object.remoteEndpoint!);
        final localEndpointOffset =
            object.localEndpoint == null
                ? null
                : fbb.writeString(object.localEndpoint!);
        final addSyncDeviceEndpointOffset =
            object.addSyncDeviceEndpoint == null
                ? null
                : fbb.writeString(object.addSyncDeviceEndpoint!);
        final authTokenOffset =
            object.authToken == null
                ? null
                : fbb.writeString(object.authToken!);
        final userIdOffset =
            object.userId == null ? null : fbb.writeString(object.userId!);
        final extrasOffset =
            object.extras == null ? null : fbb.writeString(object.extras!);
        final connectAccountEndpointOffset =
            object.connectAccountEndpoint == null
                ? null
                : fbb.writeString(object.connectAccountEndpoint!);
        final userNameOffset =
            object.userName == null ? null : fbb.writeString(object.userName!);
        final uuidOffset =
            object.uuid == null ? null : fbb.writeString(object.uuid!);
        fbb.startTable(20);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, currentDeviceIdOffset);
        fbb.addOffset(2, accountKeyOffset);
        fbb.addOffset(3, baseUrlOffset);
        fbb.addOffset(4, remoteEndpointOffset);
        fbb.addOffset(5, localEndpointOffset);
        fbb.addOffset(6, addSyncDeviceEndpointOffset);
        fbb.addOffset(7, authTokenOffset);
        fbb.addOffset(8, userIdOffset);
        fbb.addOffset(9, extrasOffset);
        fbb.addInt64(10, object.localLastUpdatedAt?.millisecondsSinceEpoch);
        fbb.addInt64(11, object.remoteLastUpdatedAt?.millisecondsSinceEpoch);
        fbb.addInt64(12, object.updatedAt?.millisecondsSinceEpoch);
        fbb.addInt64(13, object.createdAt?.millisecondsSinceEpoch);
        fbb.addInt64(14, object.deletedAt?.millisecondsSinceEpoch);
        fbb.addBool(15, object.isSynced);
        fbb.addOffset(16, connectAccountEndpointOffset);
        fbb.addOffset(17, userNameOffset);
        fbb.addOffset(18, uuidOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final localLastUpdatedAtValue = const fb.Int64Reader()
            .vTableGetNullable(buffer, rootOffset, 24);
        final remoteLastUpdatedAtValue = const fb.Int64Reader()
            .vTableGetNullable(buffer, rootOffset, 26);
        final updatedAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          28,
        );
        final createdAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          30,
        );
        final deletedAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          32,
        );
        final idParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final uuidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 40);
        final isSyncedParam = const fb.BoolReader().vTableGet(
          buffer,
          rootOffset,
          34,
          false,
        );
        final currentDeviceIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final accountKeyParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final baseUrlParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final remoteEndpointParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final localEndpointParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final addSyncDeviceEndpointParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 16);
        final connectAccountEndpointParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 36);
        final authTokenParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 18);
        final userNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 38);
        final userIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 20);
        final extrasParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 22);
        final localLastUpdatedAtParam =
            localLastUpdatedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(localLastUpdatedAtValue);
        final remoteLastUpdatedAtParam =
            remoteLastUpdatedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(remoteLastUpdatedAtValue);
        final updatedAtParam =
            updatedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedAtValue);
        final createdAtParam =
            createdAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdAtValue);
        final deletedAtParam =
            deletedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(deletedAtValue);
        final object = ConfigurationEntity(
          id: idParam,
          uuid: uuidParam,
          isSynced: isSyncedParam,
          currentDeviceId: currentDeviceIdParam,
          accountKey: accountKeyParam,
          baseUrl: baseUrlParam,
          remoteEndpoint: remoteEndpointParam,
          localEndpoint: localEndpointParam,
          addSyncDeviceEndpoint: addSyncDeviceEndpointParam,
          connectAccountEndpoint: connectAccountEndpointParam,
          authToken: authTokenParam,
          userName: userNameParam,
          userId: userIdParam,
          extras: extrasParam,
          localLastUpdatedAt: localLastUpdatedAtParam,
          remoteLastUpdatedAt: remoteLastUpdatedAtParam,
          updatedAt: updatedAtParam,
          createdAt: createdAtParam,
          deletedAt: deletedAtParam,
        );

        return object;
      },
    ),
    SyncDeviceEntity: obx_int.EntityDefinition<SyncDeviceEntity>(
      model: _entities[2],
      toOneRelations: (SyncDeviceEntity object) => [],
      toManyRelations: (SyncDeviceEntity object) => {},
      getId: (SyncDeviceEntity object) => object.id,
      setId: (SyncDeviceEntity object, int id) {
        object.id = id;
      },
      objectToFB: (SyncDeviceEntity object, fb.Builder fbb) {
        final deviceIdOffset = fbb.writeString(object.deviceId);
        final userIdOffset = fbb.writeString(object.userId);
        final uuidOffset =
            object.uuid == null ? null : fbb.writeString(object.uuid!);
        fbb.startTable(9);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, deviceIdOffset);
        fbb.addOffset(2, userIdOffset);
        fbb.addInt64(3, object.updatedAt?.millisecondsSinceEpoch);
        fbb.addInt64(4, object.createdAt?.millisecondsSinceEpoch);
        fbb.addInt64(5, object.deletedAt?.millisecondsSinceEpoch);
        fbb.addBool(6, object.isSynced);
        fbb.addOffset(7, uuidOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final updatedAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final createdAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          12,
        );
        final deletedAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          14,
        );
        final idParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final uuidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 18);
        final isSyncedParam = const fb.BoolReader().vTableGet(
          buffer,
          rootOffset,
          16,
          false,
        );
        final deviceIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final userIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final updatedAtParam =
            updatedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedAtValue);
        final createdAtParam =
            createdAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdAtValue);
        final deletedAtParam =
            deletedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(deletedAtValue);
        final object = SyncDeviceEntity(
          id: idParam,
          uuid: uuidParam,
          isSynced: isSyncedParam,
          deviceId: deviceIdParam,
          userId: userIdParam,
          updatedAt: updatedAtParam,
          createdAt: createdAtParam,
          deletedAt: deletedAtParam,
        );

        return object;
      },
    ),
    RemoteUpdateEntity: obx_int.EntityDefinition<RemoteUpdateEntity>(
      model: _entities[3],
      toOneRelations: (RemoteUpdateEntity object) => [],
      toManyRelations: (RemoteUpdateEntity object) => {},
      getId: (RemoteUpdateEntity object) => object.id,
      setId: (RemoteUpdateEntity object, int id) {
        object.id = id;
      },
      objectToFB: (RemoteUpdateEntity object, fb.Builder fbb) {
        final uuidOffset =
            object.uuid == null ? null : fbb.writeString(object.uuid!);
        final dataOffset = fbb.writeString(object.data);
        fbb.startTable(8);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, uuidOffset);
        fbb.addBool(2, object.isSynced);
        fbb.addOffset(3, dataOffset);
        fbb.addInt64(4, object.updatedAt?.millisecondsSinceEpoch);
        fbb.addInt64(5, object.createdAt?.millisecondsSinceEpoch);
        fbb.addInt64(6, object.deletedAt?.millisecondsSinceEpoch);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final updatedAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          12,
        );
        final createdAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          14,
        );
        final deletedAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          16,
        );
        final idParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final uuidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final dataParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 10, '');
        final isSyncedParam = const fb.BoolReader().vTableGet(
          buffer,
          rootOffset,
          8,
          false,
        );
        final createdAtParam =
            createdAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdAtValue);
        final updatedAtParam =
            updatedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedAtValue);
        final deletedAtParam =
            deletedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(deletedAtValue);
        final object = RemoteUpdateEntity(
          id: idParam,
          uuid: uuidParam,
          data: dataParam,
          isSynced: isSyncedParam,
          createdAt: createdAtParam,
          updatedAt: updatedAtParam,
          deletedAt: deletedAtParam,
        );

        return object;
      },
    ),
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [DataEntity] entity fields to define ObjectBox queries.
class DataEntity_ {
  /// See [DataEntity.id].
  static final id = obx.QueryIntegerProperty<DataEntity>(
    _entities[0].properties[0],
  );

  /// See [DataEntity.data].
  static final data = obx.QueryStringProperty<DataEntity>(
    _entities[0].properties[1],
  );

  /// See [DataEntity.tableName].
  static final tableName = obx.QueryStringProperty<DataEntity>(
    _entities[0].properties[2],
  );

  /// See [DataEntity.entityId].
  static final entityId = obx.QueryStringProperty<DataEntity>(
    _entities[0].properties[3],
  );

  /// See [DataEntity.operation].
  static final operation = obx.QueryStringProperty<DataEntity>(
    _entities[0].properties[4],
  );

  /// See [DataEntity.entity].
  static final entity = obx.QueryStringProperty<DataEntity>(
    _entities[0].properties[5],
  );

  /// See [DataEntity.isSynced].
  static final isSynced = obx.QueryBooleanProperty<DataEntity>(
    _entities[0].properties[6],
  );

  /// See [DataEntity.updatedAt].
  static final updatedAt = obx.QueryDateProperty<DataEntity>(
    _entities[0].properties[7],
  );

  /// See [DataEntity.createdAt].
  static final createdAt = obx.QueryDateProperty<DataEntity>(
    _entities[0].properties[8],
  );

  /// See [DataEntity.deletedAt].
  static final deletedAt = obx.QueryDateProperty<DataEntity>(
    _entities[0].properties[9],
  );

  /// See [DataEntity.uuid].
  static final uuid = obx.QueryStringProperty<DataEntity>(
    _entities[0].properties[10],
  );
}

/// [ConfigurationEntity] entity fields to define ObjectBox queries.
class ConfigurationEntity_ {
  /// See [ConfigurationEntity.id].
  static final id = obx.QueryIntegerProperty<ConfigurationEntity>(
    _entities[1].properties[0],
  );

  /// See [ConfigurationEntity.currentDeviceId].
  static final currentDeviceId = obx.QueryStringProperty<ConfigurationEntity>(
    _entities[1].properties[1],
  );

  /// See [ConfigurationEntity.accountKey].
  static final accountKey = obx.QueryStringProperty<ConfigurationEntity>(
    _entities[1].properties[2],
  );

  /// See [ConfigurationEntity.baseUrl].
  static final baseUrl = obx.QueryStringProperty<ConfigurationEntity>(
    _entities[1].properties[3],
  );

  /// See [ConfigurationEntity.remoteEndpoint].
  static final remoteEndpoint = obx.QueryStringProperty<ConfigurationEntity>(
    _entities[1].properties[4],
  );

  /// See [ConfigurationEntity.localEndpoint].
  static final localEndpoint = obx.QueryStringProperty<ConfigurationEntity>(
    _entities[1].properties[5],
  );

  /// See [ConfigurationEntity.addSyncDeviceEndpoint].
  static final addSyncDeviceEndpoint =
      obx.QueryStringProperty<ConfigurationEntity>(_entities[1].properties[6]);

  /// See [ConfigurationEntity.authToken].
  static final authToken = obx.QueryStringProperty<ConfigurationEntity>(
    _entities[1].properties[7],
  );

  /// See [ConfigurationEntity.userId].
  static final userId = obx.QueryStringProperty<ConfigurationEntity>(
    _entities[1].properties[8],
  );

  /// See [ConfigurationEntity.extras].
  static final extras = obx.QueryStringProperty<ConfigurationEntity>(
    _entities[1].properties[9],
  );

  /// See [ConfigurationEntity.localLastUpdatedAt].
  static final localLastUpdatedAt = obx.QueryDateProperty<ConfigurationEntity>(
    _entities[1].properties[10],
  );

  /// See [ConfigurationEntity.remoteLastUpdatedAt].
  static final remoteLastUpdatedAt = obx.QueryDateProperty<ConfigurationEntity>(
    _entities[1].properties[11],
  );

  /// See [ConfigurationEntity.updatedAt].
  static final updatedAt = obx.QueryDateProperty<ConfigurationEntity>(
    _entities[1].properties[12],
  );

  /// See [ConfigurationEntity.createdAt].
  static final createdAt = obx.QueryDateProperty<ConfigurationEntity>(
    _entities[1].properties[13],
  );

  /// See [ConfigurationEntity.deletedAt].
  static final deletedAt = obx.QueryDateProperty<ConfigurationEntity>(
    _entities[1].properties[14],
  );

  /// See [ConfigurationEntity.isSynced].
  static final isSynced = obx.QueryBooleanProperty<ConfigurationEntity>(
    _entities[1].properties[15],
  );

  /// See [ConfigurationEntity.connectAccountEndpoint].
  static final connectAccountEndpoint =
      obx.QueryStringProperty<ConfigurationEntity>(_entities[1].properties[16]);

  /// See [ConfigurationEntity.userName].
  static final userName = obx.QueryStringProperty<ConfigurationEntity>(
    _entities[1].properties[17],
  );

  /// See [ConfigurationEntity.uuid].
  static final uuid = obx.QueryStringProperty<ConfigurationEntity>(
    _entities[1].properties[18],
  );
}

/// [SyncDeviceEntity] entity fields to define ObjectBox queries.
class SyncDeviceEntity_ {
  /// See [SyncDeviceEntity.id].
  static final id = obx.QueryIntegerProperty<SyncDeviceEntity>(
    _entities[2].properties[0],
  );

  /// See [SyncDeviceEntity.deviceId].
  static final deviceId = obx.QueryStringProperty<SyncDeviceEntity>(
    _entities[2].properties[1],
  );

  /// See [SyncDeviceEntity.userId].
  static final userId = obx.QueryStringProperty<SyncDeviceEntity>(
    _entities[2].properties[2],
  );

  /// See [SyncDeviceEntity.updatedAt].
  static final updatedAt = obx.QueryDateProperty<SyncDeviceEntity>(
    _entities[2].properties[3],
  );

  /// See [SyncDeviceEntity.createdAt].
  static final createdAt = obx.QueryDateProperty<SyncDeviceEntity>(
    _entities[2].properties[4],
  );

  /// See [SyncDeviceEntity.deletedAt].
  static final deletedAt = obx.QueryDateProperty<SyncDeviceEntity>(
    _entities[2].properties[5],
  );

  /// See [SyncDeviceEntity.isSynced].
  static final isSynced = obx.QueryBooleanProperty<SyncDeviceEntity>(
    _entities[2].properties[6],
  );

  /// See [SyncDeviceEntity.uuid].
  static final uuid = obx.QueryStringProperty<SyncDeviceEntity>(
    _entities[2].properties[7],
  );
}

/// [RemoteUpdateEntity] entity fields to define ObjectBox queries.
class RemoteUpdateEntity_ {
  /// See [RemoteUpdateEntity.id].
  static final id = obx.QueryIntegerProperty<RemoteUpdateEntity>(
    _entities[3].properties[0],
  );

  /// See [RemoteUpdateEntity.uuid].
  static final uuid = obx.QueryStringProperty<RemoteUpdateEntity>(
    _entities[3].properties[1],
  );

  /// See [RemoteUpdateEntity.isSynced].
  static final isSynced = obx.QueryBooleanProperty<RemoteUpdateEntity>(
    _entities[3].properties[2],
  );

  /// See [RemoteUpdateEntity.data].
  static final data = obx.QueryStringProperty<RemoteUpdateEntity>(
    _entities[3].properties[3],
  );

  /// See [RemoteUpdateEntity.updatedAt].
  static final updatedAt = obx.QueryDateProperty<RemoteUpdateEntity>(
    _entities[3].properties[4],
  );

  /// See [RemoteUpdateEntity.createdAt].
  static final createdAt = obx.QueryDateProperty<RemoteUpdateEntity>(
    _entities[3].properties[5],
  );

  /// See [RemoteUpdateEntity.deletedAt].
  static final deletedAt = obx.QueryDateProperty<RemoteUpdateEntity>(
    _entities[3].properties[6],
  );
}
